{"version":3,"sources":["component/Search.js","component/Artist.js","component/Track.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","title","onChangeTitle","bind","submitHandler","e","this","setState","target","value","preventDefault","console","log","search","className","htmlFor","type","onChange","onClick","Component","Artist","artist","name","id","images","genres","followers","src","url","alt","total","join","Track","playing","audio","previewUrl","playAudio","Audio","pause","play","trackIcon","tracks","map","item","key","preview_url","album","URI","App","artistInfo","searchArtist","fetch","then","response","json","result","artists","items","catch","err","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f21f5050.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        }\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(e){\r\n        e.preventDefault();\r\n        console.log(\"title\", this.state.title);\r\n        this.props.search(this.state.title);\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3 well wel-lg\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"artist\">Search</label>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.title} onChange={this.onChangeTitle}/>\r\n                            <div className=\"input-group-btn\">\r\n                                <button className=\"btn btn-info\" onClick={this.submitHandler}>\r\n                                    <span className=\"glyphicon glyphicon-search\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Artist(props) {\r\n    if(!props.artist) return null;\r\n    const {id, name, images, genres, followers} = props.artist;\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                <h1 className=\"text-center\">{name}</h1>\r\n                <img className=\"img-responsive img-circle\" src={images[1].url} alt=\"\"/>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Followers <span className=\"pull-right\">{followers.total}</span></li>\r\n                    <li className=\"list-group-item\">Genres <span className=\"pull-right\">{genres.join(\",\")}</span></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport './artist.css';\r\n\r\nexport default class Track extends Component{\r\n\r\n    state = {\r\n        playing: false,\r\n        audio: null,\r\n        previewUrl: null\r\n    }\r\n\r\n    playAudio = (url) => {\r\n        const audio = new Audio(url);\r\n        \r\n        if(!this.state.playing){\r\n            audio.play();\r\n            this.setState({\r\n                playing: true,\r\n                audio,\r\n                previewUrl: url\r\n            })\r\n        }\r\n        else {\r\n            this.state.audio.pause();\r\n\r\n            if(this.state.previewUrl === url){\r\n                this.setState({\r\n                    playing: false\r\n                });\r\n            } else {\r\n                audio.play();\r\n                this.setState({\r\n                    audio,\r\n                    previewUrl: url\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    trackIcon = (url) => {\r\n        if(!url){\r\n            return <span>No Track</span>;\r\n        }\r\n        if(this.state.playing && this.state.previewUrl === url){\r\n            return <span className=\"glyphicon glyphicon-pause\"></span>\r\n        }\r\n        \r\n        return <span className=\"glyphicon glyphicon-play\"></span>\r\n        \r\n    }\r\n    render() {\r\n        const {tracks} = this.props;\r\n        return(\r\n            <div className=\"row\">\r\n                {tracks.map((item,key) => {\r\n                    return(\r\n                        <div className=\"col-md-4\" key={key}>\r\n                            <div className=\"panel panel-primary\" onClick={() => this.playAudio(item.preview_url)}>\r\n                                <div className=\"panel-heading\">\r\n                                    <h1 className=\"panel-heading\">{item.name}</h1>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n                                    <img src={item.album.images[1].url} alt=\"\" className=\"img-responsive img-circle\"/>\r\n                                </div>\r\n                                <div className=\"panel-footer\">\r\n                                    <button className=\"btn btn-primary\">\r\n                                        {\r\n                                            this.trackIcon(item.preview_url)\r\n                                        }\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\nimport Search from './component/Search';\nimport Artist from './component/Artist';\nimport Track from './component/Track';\nconst URI = \"https://spotify-api-wrapper.appspot.com\";\n\nclass App extends Component{\n\n  state = {\n    artistInfo: null,\n    tracks: []\n  };\n\n  componentDidMount(){\n    this.searchArtist(\"A R Rehman\");\n  }\n  searchArtist =(name) => {\n    fetch(`${URI}/artist/${name}`)\n    .then(response => response.json())\n    .then(result => {\n      console.log(result);\n      if(result.artists.total > 0){\n        const artistInfo = result.artists.items[0];\n        \n        this.setState({\n          artistInfo\n        });\n\n        fetch(`${URI}/artist/${artistInfo.id}/top-tracks`)\n        .then(response => response.json())\n        .then(result => {\n          console.log(\"Tracks\", result.tracks);\n          this.setState({\n            tracks: result.tracks\n          });\n\n        })\n        .catch(err => console.log(err.message));\n      }\n    })\n    .catch(err => console.log(err.message));\n  }\n  render() {\n    return(\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 well text-center \">\n            <h1>Music Player</h1>\n          </div>\n        </div>\n        <Search search={this.searchArtist}/>\n        <Artist artist={this.state.artistInfo}/>\n        <Track tracks={this.state.tracks}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}